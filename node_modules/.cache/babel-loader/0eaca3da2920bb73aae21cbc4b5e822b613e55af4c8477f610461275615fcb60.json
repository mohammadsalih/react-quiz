{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Desktop/react-quiz/src/components/Options.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Options({\n  question,\n  dispatch,\n  answer\n}) {\n  _s();\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleOptionClick = option => {\n    setIsDisabled(true);\n    setSelectedOption(option);\n    dispatch({\n      type: \"newAnswer\",\n      payload: option\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isDisabled,\n      className: `btn btn-option ${option === answer && answer === question.options[question.correctOption] ? \"correct\" : selectedOption === option ? \"wrong\" : \"\"}`,\n      onClick: () => handleOptionClick(option),\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Options, \"8c2Lm5/cQHh2eZovz1zE2AGF2zA=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Options","question","dispatch","answer","_s","isDisabled","setIsDisabled","selectedOption","setSelectedOption","handleOptionClick","option","type","payload","className","children","options","map","disabled","correctOption","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohammad/Desktop/react-quiz/src/components/Options.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Options({ question, dispatch, answer }) {\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleOptionClick = (option) => {\n    setIsDisabled(true);\n    setSelectedOption(option);\n    dispatch({ type: \"newAnswer\", payload: option });\n  };\n\n  return (\n    <div className=\"options\">\n      {question.options.map((option) => (\n        <button\n          key={option}\n          disabled={isDisabled}\n          className={`btn btn-option ${\n            option === answer &&\n            answer === question.options[question.correctOption]\n              ? \"correct\"\n              : selectedOption === option\n              ? \"wrong\"\n              : \"\"\n          }`}\n          onClick={() => handleOptionClick(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Options;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMY,iBAAiB,GAAIC,MAAM,IAAK;IACpCJ,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAACE,MAAM,CAAC;IACzBR,QAAQ,CAAC;MAAES,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEF;IAAO,CAAC,CAAC;EAClD,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBb,QAAQ,CAACc,OAAO,CAACC,GAAG,CAAEN,MAAM,iBAC3BX,OAAA;MAEEkB,QAAQ,EAAEZ,UAAW;MACrBQ,SAAS,EAAG,kBACVH,MAAM,KAAKP,MAAM,IACjBA,MAAM,KAAKF,QAAQ,CAACc,OAAO,CAACd,QAAQ,CAACiB,aAAa,CAAC,GAC/C,SAAS,GACTX,cAAc,KAAKG,MAAM,GACzB,OAAO,GACP,EACL,EAAE;MACHS,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACC,MAAM,CAAE;MAAAI,QAAA,EAExCJ;IAAM,GAZFA,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaL,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CA/BQJ,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAiChB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}