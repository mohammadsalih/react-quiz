{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Desktop/react-quiz/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport { fetchData, API, reducePoints } from \"./helpers/Helpers.js\";\nimport Question from \"./components/Question.js\";\nimport Header from \"./components/Header.js\";\nimport Loader from \"./components/Loader.js\";\nimport Error from \"./components/Error.js\";\nimport Main from \"./components/Main.js\";\nimport Progress from \"./components/Progress.js\";\nimport NextButton from \"./components/NextButton.js\";\nimport StartScreen from \"./components/StartScreen.js\";\nimport FnishScreen from \"./components/FnishScreen.js\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // loading , error , ready , active , finished\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"next\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"finish\":\n      return {\n        ...state,\n        heighestScore: state.heighestScore\n      };\n    case \"restart\":\n      return {\n        ...initialState\n      };\n    default:\n      throw new Error(\"unknown action\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const numberOfQuestions = questions.length;\n  const totalPoints = reducePoints(questions);\n  useEffect(function () {\n    async function fetchDataAndInitialize() {\n      try {\n        const data = await fetchData(API);\n        dispatch({\n          type: \"dataRecieved\",\n          payload: data\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        dispatch({\n          type: \"dataFailed\"\n        });\n      }\n    }\n    fetchDataAndInitialize();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numberOfQuestions: numberOfQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          numberOfQuestions: numberOfQuestions,\n          index: index,\n          totalPoints: totalPoints,\n          points: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: /*#__PURE__*/_jsxDEV(NextButton, {\n            dispatch: dispatch,\n            answer: answer,\n            numberOfQuestions: numberOfQuestions,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), status === \"finished\" && /*#__PURE__*/_jsxDEV(FnishScreen, {\n        points: points,\n        totalPoints: totalPoints,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0OEOIqjdcb8TdctxTjYZDs56r3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","fetchData","API","reducePoints","Question","Header","Loader","Error","Main","Progress","NextButton","StartScreen","FnishScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","reducer","state","action","type","payload","question","at","correctOption","heighestScore","App","_s","dispatch","numberOfQuestions","length","totalPoints","fetchDataAndInitialize","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohammad/Desktop/react-quiz/src/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { fetchData, API, reducePoints } from \"./helpers/Helpers.js\";\nimport Question from \"./components/Question.js\";\nimport Header from \"./components/Header.js\";\nimport Loader from \"./components/Loader.js\";\nimport Error from \"./components/Error.js\";\nimport Main from \"./components/Main.js\";\nimport Progress from \"./components/Progress.js\";\nimport NextButton from \"./components/NextButton.js\";\nimport StartScreen from \"./components/StartScreen.js\";\nimport FnishScreen from \"./components/FnishScreen.js\";\nimport \"./index.css\";\n\nconst initialState = {\n  questions: [],\n  // loading , error , ready , active , finished\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\",\n      };\n\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\",\n      };\n\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n\n        answer: action.payload,\n        points:\n          action.payload === question.correctOption\n            ? state.points + question.points\n            : state.points,\n      };\n\n    case \"next\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null,\n      };\n\n    case \"finish\":\n      return {\n        ...state,\n        heighestScore: state.heighestScore,\n      };\n\n    case \"restart\":\n      return {\n        ...initialState,\n      };\n\n    default:\n      throw new Error(\"unknown action\");\n  }\n}\n\nfunction App() {\n  const [{ questions, status, index, answer, points }, dispatch] =\n    useReducer(reducer, initialState);\n\n  const numberOfQuestions = questions.length;\n  const totalPoints = reducePoints(questions);\n\n  useEffect(function () {\n    async function fetchDataAndInitialize() {\n      try {\n        const data = await fetchData(API);\n\n        dispatch({\n          type: \"dataRecieved\",\n          payload: data,\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        dispatch({\n          type: \"dataFailed\",\n        });\n      }\n    }\n\n    fetchDataAndInitialize();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"ready\" && (\n          <StartScreen\n            numberOfQuestions={numberOfQuestions}\n            dispatch={dispatch}\n          />\n        )}\n        {status === \"active\" && (\n          <>\n            <Progress\n              numberOfQuestions={numberOfQuestions}\n              index={index}\n              totalPoints={totalPoints}\n              points={points}\n            />\n\n            <Question\n              question={questions[index]}\n              dispatch={dispatch}\n              answer={answer}\n            />\n\n            <footer>\n              <NextButton\n                dispatch={dispatch}\n                answer={answer}\n                numberOfQuestions={numberOfQuestions}\n                index={index}\n              />\n            </footer>\n          </>\n        )}\n        {status === \"finished\" && (\n          <FnishScreen\n            points={points}\n            totalPoints={totalPoints}\n            dispatch={dispatch}\n          />\n        )}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}