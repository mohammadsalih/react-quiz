{"ast":null,"code":"export async function fetchData(url) {\n  const controller = new AbortController();\n  try {\n    const response = await fetch(url, {\n      signal: controller.signal\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch data from ${url}. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (!data || typeof data !== \"object\") {\n      throw new Error(\"Invalid data received from the server.\");\n    }\n    return data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.message);\n      throw error;\n    }\n  }\n}\nexport function reducePoints(questionsData) {\n  let totalPoints = 0;\n  questionsData.forEach(question => {\n    totalPoints += question.points;\n  });\n  return totalPoints;\n}\nexport function calculatePercentage(value, total) {\n  return Math.ceil(value / total * 100);\n}\nexport const formatTime = timeInSeconds => {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = timeInSeconds % 60;\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n};\nexport const API = \"http://localhost:8000/questions\";","map":{"version":3,"names":["fetchData","url","controller","AbortController","response","fetch","signal","ok","Error","status","data","json","error","name","console","message","reducePoints","questionsData","totalPoints","forEach","question","points","calculatePercentage","value","total","Math","ceil","formatTime","timeInSeconds","minutes","floor","seconds","API"],"sources":["/Users/mohammad/Desktop/react-quiz/src/helpers/Helpers.js"],"sourcesContent":["export async function fetchData(url) {\n  const controller = new AbortController();\n\n  try {\n    const response = await fetch(url, { signal: controller.signal });\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch data from ${url}. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n\n    if (!data || typeof data !== \"object\") {\n      throw new Error(\"Invalid data received from the server.\");\n    }\n\n    return data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.message);\n      throw error;\n    }\n  }\n}\n\nexport function reducePoints(questionsData) {\n  let totalPoints = 0;\n  questionsData.forEach((question) => {\n    totalPoints += question.points;\n  });\n  return totalPoints;\n}\n\nexport function calculatePercentage(value, total) {\n  return Math.ceil((value / total) * 100);\n}\n\nexport const formatTime = (timeInSeconds) => {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = timeInSeconds % 60;\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n};\n\nexport const API = \"http://localhost:8000/questions\";\n"],"mappings":"AAAA,OAAO,eAAeA,SAASA,CAACC,GAAG,EAAE;EACnC,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;EAExC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;MAAEK,MAAM,EAAEJ,UAAU,CAACI;IAAO,CAAC,CAAC;IAEhE,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CACZ,6BAA4BP,GAAI,aAAYG,QAAQ,CAACK,MAAO,EAC/D,CAAC;IACH;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACD,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MACrC,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;MAC/BC,OAAO,CAACF,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;MAC5B,MAAMH,KAAK;IACb;EACF;AACF;AAEA,OAAO,SAASI,YAAYA,CAACC,aAAa,EAAE;EAC1C,IAAIC,WAAW,GAAG,CAAC;EACnBD,aAAa,CAACE,OAAO,CAAEC,QAAQ,IAAK;IAClCF,WAAW,IAAIE,QAAQ,CAACC,MAAM;EAChC,CAAC,CAAC;EACF,OAAOH,WAAW;AACpB;AAEA,OAAO,SAASI,mBAAmBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAChD,OAAOC,IAAI,CAACC,IAAI,CAAEH,KAAK,GAAGC,KAAK,GAAI,GAAG,CAAC;AACzC;AAEA,OAAO,MAAMG,UAAU,GAAIC,aAAa,IAAK;EAC3C,MAAMC,OAAO,GAAGJ,IAAI,CAACK,KAAK,CAACF,aAAa,GAAG,EAAE,CAAC;EAC9C,MAAMG,OAAO,GAAGH,aAAa,GAAG,EAAE;EAClC,OAAQ,GAAEC,OAAQ,IAAGE,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,EAAC;AAC1D,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG,iCAAiC"},"metadata":{},"sourceType":"module","externalDependencies":[]}