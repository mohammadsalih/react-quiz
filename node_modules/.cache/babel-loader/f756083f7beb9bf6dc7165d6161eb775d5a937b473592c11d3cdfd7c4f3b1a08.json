{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Desktop/react-quiz/src/components/Options.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Options({\n  question,\n  dispatch,\n  answer\n}) {\n  _s();\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const correctOptionIndex = question.correctOption;\n  const handleOptionClick = (e, option) => {\n    e.target.classList.add(\"answer\");\n    setIsDisabled(true);\n    dispatch({\n      type: \"newAnswer\",\n      payload: option\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isDisabled,\n      className: `btn btn-option ${isDisabled ? index === correctOptionIndex ? \"correct \" : \"wrong\" : \"\"}`,\n      onClick: e => handleOptionClick(e, option),\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Options, \"8c2Lm5/cQHh2eZovz1zE2AGF2zA=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Options","question","dispatch","answer","_s","isDisabled","setIsDisabled","selectedOption","setSelectedOption","correctOptionIndex","correctOption","handleOptionClick","e","option","target","classList","add","type","payload","className","children","options","map","index","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohammad/Desktop/react-quiz/src/components/Options.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Options({ question, dispatch, answer }) {\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const correctOptionIndex = question.correctOption;\n\n  const handleOptionClick = (e, option) => {\n    e.target.classList.add(\"answer\");\n    setIsDisabled(true);\n    dispatch({ type: \"newAnswer\", payload: option });\n  };\n\n  return (\n    <div className=\"options\">\n      {question.options.map((option, index) => (\n        <button\n          key={option}\n          disabled={isDisabled}\n          className={`btn btn-option ${\n            isDisabled\n              ? index === correctOptionIndex\n                ? \"correct \"\n                : \"wrong\"\n              : \"\"\n          }`}\n          onClick={(e) => handleOptionClick(e, option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Options;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMY,kBAAkB,GAAGR,QAAQ,CAACS,aAAa;EAEjD,MAAMC,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,MAAM,KAAK;IACvCD,CAAC,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAChCV,aAAa,CAAC,IAAI,CAAC;IACnBJ,QAAQ,CAAC;MAAEe,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEL;IAAO,CAAC,CAAC;EAClD,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBnB,QAAQ,CAACoB,OAAO,CAACC,GAAG,CAAC,CAACT,MAAM,EAAEU,KAAK,kBAClCxB,OAAA;MAEEyB,QAAQ,EAAEnB,UAAW;MACrBc,SAAS,EAAG,kBACVd,UAAU,GACNkB,KAAK,KAAKd,kBAAkB,GAC1B,UAAU,GACV,OAAO,GACT,EACL,EAAE;MACHgB,OAAO,EAAGb,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEC,MAAM,CAAE;MAAAO,QAAA,EAE5CP;IAAM,GAXFA,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYL,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CA/BQJ,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAiChB,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}